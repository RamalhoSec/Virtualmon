#!/usr/bin/env bash
# encoding utf-8
# Author: Alan ramalho (https://gitlab.com/raioramalho)



#::Checking Dependences
[ $(which iw) ] && sleep 0.1 || echo "Please install iw tools" #iw
[ $(which iwconfig) ] && sleep 0.1 || echo "Iwconfig not found, are you root?" #iwconfig
[ $UID -eq "0" ] && sleep 0.1 || echo "Please run this tool with root" #permissions
######################################################



#::Defining Global Variables
date="$(date +%c)"
######################################################



#::Defining Global Functions
f_logo() {
    printf "
    # virtualmon v1.0 (https://gitlab.com/raioramalho/virtualmon)

    Generate virtual wireless interfaces in monitor mode.
    This tool has been translated from Portuguese[br] into English[us].
    I do not take responsibility for your actions.
    This code uses a GPL license.

    Usage: virtualmon --mk <mon0> -i <wlan interface> <extra options>
    Usage: virtualmon -h or --help\n"
}


f_help() {
    printf "
    Engine Options:
    --mk <name>: Create a virtual wireless interface.
    You must specify a wireless interface.
    --rm <name>: Remove a virtual wireless interface.
    Attention, you can remove interfaces
    that were not generated by this tool.	
    -i <wlan interface>: Specifies which interface will generate the virtual monitor.
    Extra Options:
    --rmac <>: Specifies a random mac with Macchanger.
    -mac <addrs>: Specifies a custom mac for interface.
    Global Options:
    --help <>: Show this screen.
    -h <>: Show this screen too.\n\n"
}


f_mkmon() {
    if [ $key == "-i" ]
    then
        ifconfig $iface down; wait
        iw dev $iface interface add $mon type monitor; wait
        case "$op" in
            --rmac) macchanger -r $mon 2>&1; wait ; echo;;
            -mac) macchanger -m $addr $mon 2>&1; wait; echo;;
        esac
        #macchanger -r $mon 2>&1 | grep -o '\[ERROR\]'; wait
        ifconfig $iface up; ifconfig $mon up
        systemctl restart NetworkManager.service
        printf "$mon was created!!\n"; iwconfig $mon
    else
        printf "You need to specify a physical wireless interface.\n"
    fi
}



f_rmmon() {
    if [ $key == "-i" ]
    then
        iw dev $mon del; wait
        printf "$mon was removed!!\n"; iwconfig $mon
    else
        printf "You need to specify a physical wireless interface.\n"	
    fi
}
######################################################



#::Arguments Menu
case $1 in
    --help)f_logo; f_help;;
    -h)f_logo; f_help;;
    --mk)mon=$2; key=$3; iface=$4; op=$5; addr=$6;f_logo; echo; f_mkmon;;
    --rm)mon=$2; key=$3; iface=$4; f_logo; echo; f_rmmon;;
    *)f_logo; f_help;;
esac
######################################################
